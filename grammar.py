#########################################
# 1. 정수형
a = 1000
b = -7
c = 0
print(a,b,c)

#########################################
# 2. 실수형
a = 157.93
b = -1837.2
# 소수부가 0일때 0을 생략
c1 = 5.
c2 = -.7
print(a,b,c1,c2)

# 지수표현방식
# 유효숫자 e 지수 = 유효숫자 * 10 지수

# 1,000,000,000
a = 1e9
print(a)
print(int(a))

# 752.5
a = 75.25e1
print(a)

# 3.954
a = 3954e-3
print(a)

# 부정확한 실수형데이터를 처리하기위해서는 round()함수를 이용
a = 0.3 + 0.6
print(round(a,4))

if round(a,4) == 0.9:
    print(True)
else:
    print(False)

# 나누기 연산자는 나눠진 결과를 실수형으로 반환
a = 5
b = 3
# 나누기연산자 /
print(a / b)
# 나머지 연산자 % (홀수인지 짝수인지 체크해야할때)
print(a % b)
# 몫 연산자 //
print(a // b)
# 거듭제곱 연산자 **
print(a ** b)

#########################################
# 3. 리스트형
# 리스트는 대괄호([])안에 원소를 넣어 초기화함, 쉼표(,)로 원소를 구분함
# 리스트의 원소에 접근할때는 Index값을 괄호에 넣는다, Index는 0부터
a1 = list()
a2 = []
print(a1, a2)

# 직접 데이터를 넣어 초기화
a = [1,2,3,4,5,6,7,8,9]
print(a)

# 4번째 원소만 출력
print(a[3]) # -> 4

# 크기가 N이고, 모든값이 0인 1차원 리스트 초기화
n = 10
a = [0]* n
print(a) # -> [0,0,0,0,0,0,0,0,0,0]

#########################################
# 3-1. 인덱싱
# 리스트의 특정한 원소에 접근하는것을 인덱싱이라고 함
# Python은 인덱스값을  양의정수, 음의정수, 모두 사용가능 (음의정수를 넣으면 거꾸로 탐색)
a = [1,2,3,4,5,6]
print(a[2]) # -> 3
print(a[-1]) # -> 6

# 4번째 원소값 변경
a[3] = 7
print(a) # -> [1,2,3,7,5,6]

#######################################
# 3-2. 슬라이싱
# 연속적인 위치를 갖는 원소들을 가져와야 할때는 슬라이싱을 사용
# 끝 인덱스는 실제 인덱스보다 1을 더 크게 설정
a = [1,2,3,4,5,6,7,8,9]