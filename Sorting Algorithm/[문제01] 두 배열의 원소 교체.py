# [문제01] 두 배열의 원소 교체 : 문제 설명

# 재훈이는 두 개의 배열 a와 b를 가지고 있습니다. 두 배열은 N개의 원소로 구성되어 있으며, 배열의 원소는 모두 자연수입니다.
# 재훈이는 최대 K번의 바꿔치기 연산을 수행할 수 있는데, 바꿔치기 연산이란 배열 A에 있는 원소 하나와
# 배열 b에 있는 원소 하나를 골라서 두 원소를 서로 바꾸는 것을 말합니다.
# 재훈이의 최종 목표는 배열 A의 모든 원소의 합이 최대가 되도록 하는것이며, 여러분은 재훈이를 도와야 합니다.
# N, K, 그리고 배열a와 b의 정보가 주어졌을 때, 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 a의 모든 원소의 합의 최댓값을 출력하시오.

# 예를들어 N = 5, K = 3이고, 배열 a와 b가 다음과 같다고 하면
# a = [1, 2, 5, 4, 3]
# b = [5, 5, 6, 6, 5]

# 이 경우, 다음과 같이 세 번의 연산을 수행할 수 있습니다.
# 연산 1) 배열 a의 원소 '1'과 배열 b의 원소 '6'을 바꾸기
# 연산 2) 배열 a의 원소 '2'과 배열 b의 원소 '6'을 바꾸기
# 연산 3) 배열 a의 원소 '3'과 배열 b의 원소 '5'을 바꾸기

# 세 번의 연산 이후 배열 a와 배열 b의 상태는 다음과 같이 구성될 것
# a = [6, 6, 5, 4, 5]
# b = [3, 5, 1, 2, 5]

# 이때 배열 a의 모든 원소의 합은 26이 되며, 이보다 더 합을 크게 만들 수는 없음

# 입력 예시 :
n = 5
k = 3
a = [1, 2, 5, 4, 3]
b = [5, 5, 6, 6, 5]

a.sort()
b.sort(reverse=True)
for i in range(k):
    # A의 원소가 B의 원소보다 작은 경우
    if a[i] < b[i]:
        a[i], b[i] = b[i], a[i]
    else: # A의 원소가 B의 원소보다 크거나 같을때, 반복문을 탈출
        break
print(sum(a))

# 핵심 아이디어 :
# 매번 배열 A에서 가장 작은 원소를 골라서, 배열 B에서 가장 큰 원소와 교체합니다.
# 가장 먼저 배열 A와 B가 주어지면 A에 대하여 오름차순 정렬하고, B에 대하여 내림차순 정렬합니다.
# 이후에 두 배열의 원소를 첫 번째 인덱스부터 차례로 확인하면서 A의 원소가 B의 원소보다 작을 때에만 교체를 수행합니다.
# 이 문제에서는 두 배열의 원소가 최대 100,000개까지 입력될 수 있으므로, 최악의경우 O(NlogN)을 보장하는 정렬 알고리즘을 이용해야 합니다.
