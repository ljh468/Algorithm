# 파라메트릭 서치(Parametric Search)
# - 파라메트릭 서치란 최적화 문제를 결정문제('예' 혹은 '아니요')로 바꾸어 해결하는 기법
# - 예시) 특정한 조건을 만족하는 가장 알맞는 값을 빠르게 찾는 최적화 문제
# 일반적으로 코딩테스트에서 파라메트릭 서치 문제는 이진탐색을 이용하여 해결할 수 있음

# [문제 00] 떡볶이 떡 만들기
# - 떡볶이 떡을 만드려는데 떡의 길이가 일정하지않음, 대신에 1봉지안에 들어가는 떡의 총 길이는 절단기로 잘라서 맞추줌
# - 절단기에 높이(H)를 지정하면 줄지어진 떡이 한번에 절단됨
# - 높이가 H보다 긴떡은 H의 위의 부분이 잘릴것이고, 낮은 떡은 잘리지 않음
# - 예를들어 높이가 19, 14, 10, 17cm 인 떡이 나란히 있고 높이를 15cm로 지정하면
# - 자른 뒤 떡의 높이는 15, 14, 10, 15가 될것, 잘린 떡의 길이는 4 0 0 2 이며
# 손님은 6cm만큼의 길이를 가져감, 손님이 왔을때 요청한 총 길이가 M일때 적어도 M만큼의 떡을 얻기위해 절단기에
# 설정할 높이의 최대값을 구하는 프로그램 작업을 작성하시오
# 입력 예시 ) n = 4 (떡의 개수)
#           m = 6 (떡의 길이)
#       array = [19, 15, 10, 17] (개별 떡의 높이)

# 적어도 M만큼의 떡을 집에 가져가기 위해 절단기에 설정할 높이의 최대값을 구하시오.

# 문제해결 아이디어
# - 적절한 높이를 찾을 때까지 이진탐색을 수행하여 높이 H를 반복해서 조정하면됨
# - '현재 이 높이로 자르면 조건을 만족할 수 있는가? ' 를 확인한 뒤에 조건의 만족 여부( '예' 혹은 '아니오')에
#    따라서 탐색범위를 좁혀서 해결
# - 절단기의 높이는 0부터 10억까지의 정수 중 하나 입니다.
#   (이렇게 큰 탐색범위를 보면 가장 먼저 이진탐색을 떠올려야함)

# Step 1 : 시작점 0, 끝점 19, 중간점 9 --> 이때 필요한 떡의 크기 : M = 6
# 중간점 9로 놓고 잘린떡의 길이는 10 + 6 + 1 + 8 = 25

# Step 2 : 시작점 10, 끝점 19, 중간점 14 -->


