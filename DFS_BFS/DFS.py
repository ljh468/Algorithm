# DFS (Depth-First Search)
# DFS는 깊이 우선탐색 이라고도 부르며 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘
# DFS는 스택자료구조 혹은 재귀함수를 이용하며, 구체적인 동작과정은 다음과 같음
# 1. 탐색 시작 노드를 스택에 삽입하고 방문처리를 함
# 2. 스택의 최상단 노드에 방문 하지않은 인접한 노드가 하나라도 있으면 그 노드를 스택에 넣고 방문처리함 ( 인접한 노드 저장)
#    방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼냄
# 3. 더이상 2번의 과정을 수행할 수 없을때까지 반복
# 시작노드 : 1, 방문기준 : 번호가 낮은 인접노드부터
# 탐색순서 : 1 -> 2 -> 7 -> 6 -> 8 -> 3 -> 4 -> 5

# DFS 메서드 정의
def dfs(graph, v, visited): # v는 현재 최상위 노드부터 시작
    # 현재 노드를 방문처리
    visited[v] = True
    print(v, end=" ")
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]: # 방문하지 않은 False라면
            dfs(graph, i, visited)

# 각 노드가 연결된 정보를 표현 (2차원 리스트)
graph =[
    [],
    [2, 3, 8],
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
    ]
# 각 노드가 방문된 정보를 표현 (1차원 리스트)
visited = [False] * 9  # 0인덱스 부터 9인덱스 까지 모두 False로 채움 ( 1개 더 큰 크기의 노드를 초기화 )
# 정의된 DFS 함수 호출
dfs(graph, 1, visited)

print("#######################################")