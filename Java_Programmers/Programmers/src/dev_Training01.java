/*
 * 문제 설명
강의 왼쪽 편에서 1회용 보트를 이용하여 보급품 상자를 강의 오른쪽 편으로 전달하고자 합니다. 하지만 1회용 보트의 성능이 좋지 않아서 너무 많이 싣게 되면 보트가 망가져서 보트에 적재한 상자를 모두 잃게 됩니다.
그런데 1회용 보트가 적재할 수 있는 상자의 수는 알려져 있지 않고, 보트 별로 다를 수가 있습니다.

최대한 빠른 시간에 원하는 개수의 상자를 강의 오른쪽으로 보내고자 하는 것이 목표인데, 이를 위해 다음과 같은 방식을 고안해 냅니다. 첫 번째 보트에는 1개의 상자를 실어서 보냅니다. 이게 성공하면 그다음부터는 실패할 때까지 그 이전에 보낸 상자 수의 2배씩 상자를 실어서 보냅니다. 만약 실패하게 되면 그다음에는 다시 1개의 상자부터 시작합니다.

각 1회용 보트의 최대 적재량이 들어 있는 배열 d (이 배열은 상자를 보내는 쪽에는 알려져 있지 않음)와 보내고자 하는 상자의 수 m이 주어질 때, 위에서 제시한 방법을 사용하여 상자를 보내는 경우 사용하게 되는 보트의 수를 return 하는 solution 함수를 완성해주세요.
만약 위와 같은 방식을 사용했는데, 보트의 수가 부족하여 m개를 보내는데 실패하는 경우는 -1을 리턴합니다.
 */
public class dev_Training01 {

	public static void main(String[] args) {
		int answer = 0;
		int[] d = {2,2,4,3};
		int m = 8;
		int j = 1;
		
        for(int i : d){
            if(m <= 0){
                break;                       
            }else if(j <= i){
            	answer +=1;
            	m = m - j;
            	j = j*2;	
            }else {
            	answer +=1;
            	j = 1;
            }
        }
        if(m >0) {
        	answer = -1;
        }
        System.out.println(answer);
	}

}
