#include<bits/stdc++.h>
using namespace std;

/**
 * 예시문제
 * 승철이는 뇌를 잃어버렸다. 학교에 갔더니 선생님이 자연수로 이루어진  N개의 카드를 주며 M개의 질문을 던진다.
 * 그 질문은 나열한 카드 중 A번째부터 B번째까지의 합을 구하는 것이다.
 * 뇌를 잃어버렸기 때문에 승철이는 이 문제를 풀 수 없다. 문제를 풀 수 있는 프로그램을 작성해보자.
 * 
 * 수의 개수 N, 합을 구해야 하는 횟수 M, 그 이후 N개의 수가 주어진다. 수는 100 이하의 자연수.
 * 그 이후 M개의 줄에는 합을 구해야 하는 구간 A, B가 주어진다. 
 * - 1 <= N <= 100,000
 * - 1 <= M <= 100,000
 * - 1 <= A <= B <= N
 * 
 * 아이디어 :
 * 최대 N개는 10만, M개도 10만, 단순 for문으로 풀게되면 10만 * 10만 = 100억이 나오기때문에 시간초과가 나올것
 * 미리 누적합을 저장하는 prefix_sum을 이용하면 풀 수 있다.
 */

//  입력값 :
//  8 3
//  1 2 3 4 5 6 7 8
//  1 4
//  1 5
//  3 5
//  출력값 :
//  10
//  15
//  12


int arr[100004];
int psum[100004];
int n, m;
int a; // 질문의 A번째
int b; // 질문의 B번째
int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    cin >> n >> m;
    // arr[-1] 배열을 참조할 수 없기때문에 1부터 n까지
    for(int i = 1; i <= n; i++) {
        cin >> arr[i];
        // 이전 누적합 + 현재 값
        psum[i] = psum[i - 1] + arr[i];
    }

    for(int i = 0; i < m; i++) {
        cin >> a >> b;
        // 예시: a : 1, b : 4
        // 1~4까지 더한 psum[4]에서 0이 들어있는 psum[0]을 빼준다.
        cout << psum[b] - psum [a - 1] << "\n";
    }
    return 0;
}