#include <bits/stdc++.h>
using namespace std;
 
 /**
  * 갑옷을 만드는 재료들은 각각 고유한 번호를 가지고 있다.
  * 갑옷은 두 개의 재료로 만드는데 두 재료의 고유한 번호를 합쳐서 M(1 ≤ M ≤ 10,000,000)이 되면 갑옷이 만들어 지게 된다.
  * 야철대장은 자신이 만들고 있는 재료를 가지고 갑옷을 몇 개나 만들 수 있는지 궁금해졌다.
  * N(1 ≤ N ≤ 15,000) 개의 재료와 M이 주어졌을 때 몇 개의 갑옷을 만들 수 있는지를 구하는 프로그램을 작성
  * 
  * 아이디어:
  * n개의 개수의 재료들중 2개의 합이 m이 되면 갑옷이 만들어짐...
  * 조합으로 풀수 있을듯?
  * 투포인터도 가능할 것 같음
  */

// 입력 :
// 6
// 9
// 2 7 4 1 5 3

// 출력 : 
// 2

int a[15001];
int n, m, cnt;
int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	cin >> n >> m; 
	for(int i = 0; i < n; i++) {
		cin >> a[i];
	}

	//이 if문은 없어도됨. but, 설명을 위해.
	if(m > 200000) {
		cout << 0 << "\n";
	} else{
		// 2개를 찾기 때문에 반복문을 이용한 조합
		for(int i = 0; i < n; i++) {
			for(int j = i + 1; j < n; j++) {
				// cout << "a[" << i << "] = " << a[i] << ", ";
				// cout << "a[" << j << "] = " << a[j] << "\n";
				if(a[i] + a[j] == m) {
					cnt++;
				}
			}
		}
		cout << cnt << "\n";
	} 
}